//w3q1

#include <mpi.h>
#include <stdio.h>
#include <string.h>

int factorial(int d){
	int sum = 1;
	while(d>1){
		sum*=d;
		d--;
	}
	return sum;
}

int main(int argc, char *argv[])
{
	int rank, size;
	int arr[50];
	int recv;
	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	if(rank==0)
	{
		int n, i;
		n = size;
		printf("\n Enter %d no of Values \n",n);
		for(i=0; i<n; i++)
			scanf("%d",&arr[i]);
	}
	MPI_Scatter(arr, 1, MPI_INT, &recv, 1, MPI_INT, 0, MPI_COMM_WORLD);
	printf("\n I have received %d in process %d\n",recv, rank);
	int answer = factorial(recv);
	printf("\n Factorial of %d is : %d\n",recv, answer);
	MPI_Finalize();
	return 0;
}


//w3q2

#include <mpi.h>
#include <stdio.h>
#include <string.h>

int factorial(int d){
	int sum = 1;
	while(d>1){
		sum*=d;
		d--;
	}
	return sum;
}

int main(int argc, char *argv[])
{
	int rank, size;
	int arr[50], brr[50];
	int recv;
	int n, i;
	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	if(rank==0)
	{
		n = size;
		printf("\n Enter %d no of Values \n",n);
		for(i=0; i<n; i++)
			scanf("%d",&arr[i]);
	}
	MPI_Scatter(arr, 1, MPI_INT, &recv, 1, MPI_INT, 0, MPI_COMM_WORLD);
	printf("\n I have received %d in process %d\n",recv, rank);
	int answer = factorial(recv);
	printf("\n Factorial of %d is : %d\n",recv, answer);
	//MPI_Reduce(&answer,&recv,1,MPI_INT,MPI_SUM,0,MPI_COMM_WORLD);
	MPI_Gather(&answer,1,MPI_INT,&brr,1,MPI_INT,0,MPI_COMM_WORLD);
	if(rank==0)
	{
		printf("\n Gathered factorial is \n");
		int sum=0;
		for(i=0; i<n; i++)
			{ sum+=brr[i];printf("%d ",brr[i]);}
		printf("\n Gathered Sum : %d",sum);
	}
	MPI_Finalize();
	return 0;
}


//w3q3

#include <mpi.h>
#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[])
{
	int rank, size;
	int arr[50], brr[50];
	int recv[50];
	int m,n, i;
	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	if(rank==0)
	{
		n = size;
		printf("\n Enter value Of M : ");
		scanf("%d",&m);
		printf("\n Enter Value of m*n \n",n);
		for(i=0; i<m*n; i++)
			scanf("%d",&arr[i]);
	}
	MPI_Bcast(&m,1,MPI_INT,0,MPI_COMM_WORLD);
	MPI_Scatter(arr, m, MPI_INT, &recv, m, MPI_INT, 0, MPI_COMM_WORLD);
	int sum=0;
	for(i=0; i<m; i++)
		sum+=recv[i];
	printf("\n Process : %d & Avg : %d",rank,sum/m);
	sum/=m;
	MPI_Gather(&sum,1,MPI_INT,&arr,1,MPI_INT,0,MPI_COMM_WORLD);
	if(rank==0){
	sum=0;
	for(i=0; i<m; i++)
	{
		//printf("\n%d",arr[i]);
		sum+=arr[i];
	}
	printf("\n Total Avg : %d",sum/m);
	}
	MPI_Finalize();
	return 0;
}


// w3q4


#include <mpi.h>
#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[])
{
	int len, rank, size;
	char arr[50], rev[50];
	int indexarr[50];
	char finalarray[50];
	int n, i;
	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	if(rank==0)
	{
		n = size;
		printf("\n Enter a String : ");
		scanf("%s",arr);
		len= strlen(arr);
	}
	MPI_Bcast(&len,1,MPI_INT,0,MPI_COMM_WORLD);
	MPI_Bcast(&n,1,MPI_INT,0,MPI_COMM_WORLD);
	MPI_Scatter(&arr[0], len/n, MPI_CHAR, &rev[0], len/n, MPI_CHAR, 0, MPI_COMM_WORLD);
	int index=0;
	char nonvowel[50];
	for(i=0; i<len/n; i++)
		if(rev[i]=='a' || rev[i]=='e' || rev[i]=='i' || rev[i]=='o' || rev[i]=='u')
			continue;
		else
			nonvowel[index++]=rev[i];

	MPI_Gather(&index,1,MPI_INT,&indexarr,1,MPI_INT,0,MPI_COMM_WORLD);
	MPI_Gather(&nonvowel,index,MPI_CHAR,&finalarray,index,MPI_CHAR,0,MPI_COMM_WORLD);
	printf("\n Rank : %d has no of vowels as : %d",rank,index);
	for(i=0; i<index; i++)
		printf(" %c ",nonvowel[i]);
	if(rank==0)
	{
		int total=0;
		for(i=0; i<size; i++)
			total+=indexarr[i];
		for(i=0; i<total; i++)
			printf(" %c ",finalarray[i]);

	}
	MPI_Finalize();
	return 0;
}

